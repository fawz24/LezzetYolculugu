@model LezzetYolculugu.Models.CreateRecipeViewModel

@{
    ViewData["Title"] = "Create";
}

<h2>Yeni tarife</h2>

<div>
    <a asp-action="Index">Ana sayfaya dön</a>
</div>
<br />
@if (ViewData["Error"] != null)
{
<p class="text-danger">@ViewData["Error"]</p>
}
<form asp-action="Create">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <div class="form-group">
        <label asp-for="Title" class="control-label"></label>
        <input asp-for="Title" class="form-control w-100" required />
        <span asp-validation-for="Title" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Ingredients" class="control-label"></label>
        <div id="ingredients-container">
            <div class="row form-group ingredient">
                @if (Model.Ingredients != null && Model.Ingredients.Count > 0)
                {
                    foreach (var item in Model.Ingredients.Select((ingredient, index) => new { ingredient, index }))
                    {
                        <div class="col-sm-6">
                            <input class="form-control" name="Ingredients[@item.index].Name" type="text" 
                                   value="@item.ingredient.Name" placeholder="Malzeme adı" required/>
                        </div>
                        <div class="col-sm-3">
                            <input class="form-control" name="Ingredients[@item.index].Quantity" type="number" 
                                   step="any" value="@item.ingredient.Quantity" placeholder="Miktar" />
                        </div>
                        <div class="col-sm-3">
                            <select asp-for="Ingredients[0].UnitId" class="form-control"
                                    asp-items="@(new SelectList(Model.Units, "Id", "Name", item.ingredient.UnitId))"></select>
</div>
                    }
                }
                else
                {
                    <div class="col-sm-6">
                        <input class="form-control" name="Ingredients[0].Name" type="text" placeholder="Malzeme adı" required/>
                    </div>
                    <div class="col-sm-3">
                        <input class="form-control" name="Ingredients[0].Quantity" type="number" step="any" placeholder="Miktar" />
                    </div>
                    <div class="col-sm-3">
                        <select asp-for="Ingredients[0].UnitId" class="form-control" 
                            asp-items="@(new SelectList(Model.Units, "Id", "Name"))"></select>
                    </div>
                }
            </div>
        </div>
        <div class="form-group">
            <p class="btn btn-outline-primary" id="add-ingredient-btn">Malzeme Ekle</p>
            <p class="btn btn-outline-danger" id="remove-ingredient-btn">Malzeme Çıkar</p>
        </div>
    </div>
    <div class="form-group">
        <label asp-for="Detail" class="control-label"></label>
        <textarea asp-for="Detail" class="form-control" rows="17" required></textarea>
        <span asp-validation-for="Detail" class="text-danger"></span>
    </div>
    <div class="form-group">
        <input type="submit" value="Oluştur" class="btn btn-success" />
    </div>
</form>

@section Scripts{
    <script>
        var ingredientsCount = 1;
        $('document').ready(function () {
            $('#add-ingredient-btn').click(function () {
                var inputIngredientName = $('<input/>').addClass("form-control").attr({
                    name: `Ingredients[${ingredientsCount}].Name`,
                    type: "text",
                    placeholder: "Malzeme adı",
                    required: true
                });
                var divIngredientName = $('<div></div>').addClass("col-sm-6").append(inputIngredientName);
                var inputIngredientQuantity = $('<input/>').addClass("form-control").attr({
                    name: `Ingredients[${ingredientsCount}].Quantity`,
                    type: "number",
                    step: "any",
                    placeholder: "Miktar",
                    required: true
                });
                var divIngredientQuantity = $('<div></div>').addClass("col-sm-3").append(inputIngredientQuantity);
                var divRow = $('<div></div>').addClass(["row", "form-group", "ingredient"])
                    .append(divIngredientName, divIngredientQuantity, unitOptionsHtml(ingredientsCount));
                $('#ingredients-container').append(divRow);
                ingredientsCount += 1;
            });

            $('#remove-ingredient-btn').click(function () {
                console.log(`remove ingredient, count: ${ingredientsCount}`);
                if (ingredientsCount > 1) {
                    var lastIngredient = $('.ingredient:last');
                    console.log(lastIngredient);
                    lastIngredient.remove();
                    ingredientsCount -= 1;
                }
            });
        });

        function unitOptionsHtml(count) {
            return `<div class="col-sm-3">
                <select class="form-control" name="Ingredients[${count}].UnitId">
                @foreach (var unit in Model.Units)
                {
                    <option value="@unit.Id">@unit.Name</option>
                }
                </select>
            </div>`
        }
    </script>
}